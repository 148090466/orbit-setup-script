/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { OrbitSalts, OrbitSaltsInterface } from '../OrbitSalts'

const _abi = [
  {
    inputs: [],
    name: 'BEACON_PROXY_FACTORY',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L1_CUSTOM_GATEWAY',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L1_PROXY_ADMIN',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L1_ROUTER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L1_STANDARD_GATEWAY',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L1_WETH_GATEWAY',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L2_CUSTOM_GATEWAY',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L2_CUSTOM_GATEWAY_LOGIC',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L2_EXECUTOR',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L2_EXECUTOR_LOGIC',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L2_PROXY_ADMIN',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L2_ROUTER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L2_ROUTER_LOGIC',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L2_STANDARD_ERC20',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L2_STANDARD_GATEWAY',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L2_STANDARD_GATEWAY_LOGIC',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L2_WETH',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L2_WETH_GATEWAY',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L2_WETH_GATEWAY_LOGIC',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L2_WETH_LOGIC',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UPGRADEABLE_BEACON',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]

const _bytecode =
  '0x6108a461003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101415760003560e01c80637f663578116100c2578063b06b884211610086578063b06b884214610670578063c7f53a86146106c8578063d72874fa14610724578063d845c5811461077a578063ea45ce09146107c4578063f27740111461081a57600080fd5b80637f663578146104ba578063884c717b146105165780639a5a178714610572578063a89f1d7d146105c8578063ab1ff0611461061857600080fd5b8063282989921161010957806328298992146103035780632ed2f497146103585780633fca125c146103b0578063484eedf51461040857806362ed5edb1461046457600080fd5b80630b1221111461014657806319c4d4c6146101b05780631a3f9a6f146101ff57806320fb24d51461025757806325f6a240146102a7575b600080fd5b6040805180820190915260198152784f726269744c3147617465776179526f7574657250726f787960381b60209091015261019e7fbd8b1d12c8e5a8ca1400afc0a6b5d705b3308d63522b29179c77933e3a957f5681565b60405190815260200160405180910390f35b60408051808201909152601081526f4f726269744c325745544850726f787960801b60209091015261019e7faa3df332d16f11e71b71d29b913fb3f2163fc0a69ead3e06d07b63ef6014c6a681565b6040805180820190915260198152784f726269744c32437573746f6d4761746577617950726f787960381b60209091015261019e7f9b844f9a11add342d69b6dd9b9f67f5098287031d51822d877de6c085f649ee681565b60408051808201909152601181527027b93134ba2619283937bc3ca0b236b4b760791b60209091015261019e7f9c47a8938bdb4c62ccc8ba30b4340bb5403864794c2c675f6d03de6458bb2dcd81565b60408051808201909152601b81527f4f726269744c32557067726164654578656375746f724c6f676963000000000060209091015261019e7f55eaa39139f787ea41010e1e368ca1ae79d611e82e63b03b9aa2b0ab9a1fefb981565b60408051808201909152601681527527b93134ba2ab833b930b232b0b13632a132b0b1b7b760511b60209091015261019e7fb5ed78ed10c2eb255471c5a5ca148fc97ad941b84f42debb40a2abe5d5b2825a81565b6040805180820190915260198152784f726269744c3247617465776179526f757465724c6f67696360381b60209091015261019e7f932207104c657d325be74336a4c0e3389d4429b8daf2b5d3bd0d0e8465eeaa2581565b6040805180820190915260198152784f726269744c31437573746f6d4761746577617950726f787960381b60209091015261019e7f99f7920f60f8bbfa1e1cb540da4869ec3154a1ade217c2a0dfb4384b9d53a30881565b60408051808201909152601b81527f4f726269744c325374616e64617264476174657761794c6f676963000000000060209091015261019e7fb6e1229405f84f298937866d64cc5a2b7232a39ef125c88b0d7decbe32c7e43181565b6040805180820190915260178152764f726269744c31576574684761746577617950726f787960481b60209091015261019e7f3a9e9fb030f6777ffa28f158e4134c27c7a34522de126efe7ded693db80886a481565b60408051808201909152601b81527f4f726269744c315374616e646172644761746577617950726f7879000000000060209091015261019e7f166f5a2c250245dff2fbce15e6cb141fc060006df4bc6d8e91efd7a473a5c18b81565b60408051808201909152601b81527f4f726269744c32557067726164654578656375746f7250726f7879000000000060209091015261019e7ffa9fc24cda82622e102232ca6480af8c5b3a8f2d25bcf797da0bc4491bc05d2281565b6040805180820190915260178152764f726269744c32576574684761746577617950726f787960481b60209091015261019e7f18e5a8315b94cd500c0897f49403f083eafa2ad3adfc0b9ac527a867c39c47fa81565b60408051808201909152601181527027b93134ba2618a83937bc3ca0b236b4b760791b60209091015261019e7ff04eff896d05c06b3de0e01522b43856e5ec4b076e1ce0db029f999cca55efa181565b6040805180820190915260198152784f726269744c32437573746f6d476174657761794c6f67696360381b60209091015261019e7f7a2b51e00a880f9a50acc5ebe6f87c7f9cb297d37f59d5896a08ac66ca3b9f0a81565b6040805180820190915260198152784f726269744c3247617465776179526f7574657250726f787960381b60209091015261019e7f1caa28027a4e032af4c6165bf60c76000b6d839b1db2d2701a2fa9fd7edadbc881565b60408051808201909152601b81527f4f726269744c325374616e646172644761746577617950726f7879000000000060209091015261019e7f45c9ed194764de08a602f70b653a0cf9cd9bc427689a615b61257ea6c1aafcee81565b6040805180820190915260178152764f726269744c3257657468476174657761794c6f67696360481b60209091015261019e7fd2a388471f941feb3e4600240e8450814579ca64d8a417be283e7da8741c899081565b60408051808201909152600b81526a09ee4c4d2e89864ae8aa8960ab1b60209091015261019e7fa5ed50d15e601b3f21007cc149447112ade645d7108f13643021b516950cc26a81565b6040805180820190915260178152764f72626974426561636f6e50726f7879466163746f727960481b60209091015261019e7f269522764e6d10e35f385613f5c75891778972e46c85e8e5eaaec34f248530d481565b60408051808201909152601581527404f726269745374616e64617264417262455243323605c1b60209091015261019e7f8f7010a840d99431093c6c82a0aec8da1251e8d2ed34b183b1054e95e372d0188156fea2646970667358221220b5eac124f1b6867826b497922bdb3ae989110afa11054b60e9ebc753856a115e64736f6c63430008110033'

export class OrbitSalts__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0])
    } else {
      super(...args)
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OrbitSalts> {
    return super.deploy(overrides || {}) as Promise<OrbitSalts>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): OrbitSalts {
    return super.attach(address) as OrbitSalts
  }
  connect(signer: Signer): OrbitSalts__factory {
    return super.connect(signer) as OrbitSalts__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): OrbitSaltsInterface {
    return new utils.Interface(_abi) as OrbitSaltsInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrbitSalts {
    return new Contract(address, _abi, signerOrProvider) as OrbitSalts
  }
}
