/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type {
  L1TokenBridgeRetryableSender,
  L1TokenBridgeRetryableSenderInterface,
} from '../L1TokenBridgeRetryableSender'

const _abi = [
  {
    inputs: [],
    name: 'L1TokenBridgeRetryableSender_RefundFailed',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'inbox',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'target',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'excessFeeRefundAddress',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'callValueRefundAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'maxGas',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'gasPriceBid',
            type: 'uint256',
          },
        ],
        internalType: 'struct RetryableParams',
        name: 'retryableParams',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'routerTemplate',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'standardGatewayTemplate',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'customGatewayTemplate',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'wethGatewayTemplate',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'wethTemplate',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'upgradeExecutorTemplate',
            type: 'address',
          },
        ],
        internalType: 'struct L2TemplateAddresses',
        name: 'l2',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'router',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'standardGateway',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'customGateway',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'wethGateway',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'weth',
            type: 'address',
          },
        ],
        internalType: 'struct L1Addresses',
        name: 'l1',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: 'l2StandardGatewayAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'rollupOwner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'deployer',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'aliasedL1UpgradeExecutor',
        type: 'address',
      },
    ],
    name: 'sendRetryableUsingEth',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'inbox',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'target',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'excessFeeRefundAddress',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'callValueRefundAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'maxGas',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'gasPriceBid',
            type: 'uint256',
          },
        ],
        internalType: 'struct RetryableParams',
        name: 'retryableParams',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'routerTemplate',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'standardGatewayTemplate',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'customGatewayTemplate',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'wethGatewayTemplate',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'wethTemplate',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'upgradeExecutorTemplate',
            type: 'address',
          },
        ],
        internalType: 'struct L2TemplateAddresses',
        name: 'l2',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'router',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'standardGateway',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'customGateway',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'wethGateway',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'weth',
            type: 'address',
          },
        ],
        internalType: 'struct L1Addresses',
        name: 'l1',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: 'l2StandardGatewayAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'rollupOwner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'aliasedL1UpgradeExecutor',
        type: 'address',
      },
    ],
    name: 'sendRetryableUsingFeeToken',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b50610ee6806100206000396000f3fe6080604052600436106100555760003560e01c80632157d09b1461005a578063715018a61461006f5780638129fc1c146100845780638da5cb5b14610099578063aab465da146100c5578063f2fde38b146100d8575b600080fd5b61006d610068366004610a82565b6100f8565b005b34801561007b57600080fd5b5061006d6102bb565b34801561009057600080fd5b5061006d6102cf565b3480156100a557600080fd5b50603354604080516001600160a01b039092168252519081900360200190f35b61006d6100d3366004610b0b565b6103e5565b3480156100e457600080fd5b5061006d6100f3366004610b9a565b61072d565b6101006107a3565b6040805160c081019091526000908061011c6020890189610b9a565b6001600160a01b0316803b806020016040519081016040528181526000908060200190933c81526020018760200160208101906101599190610b9a565b6001600160a01b0316803b806020016040519081016040528181526000908060200190933c81526020016101936060890160408a01610b9a565b6001600160a01b0316803b806020016040519081016040528181526000908060200190933c8152604080516020818101835260008083528185019290925282519081018352908152908201526060016101f260c0890160a08a01610b9a565b6001600160a01b0316803b806020016040519081016040528181526000908060200190933c90526102266020870187610b9a565b6102366040880160208901610b9a565b6102466060890160408a01610b9a565b60008089898960405160240161026499989796959493929190610c02565b60408051601f198184030181529190526020810180516001600160e01b0316632b5c363560e11b179052905060006102a460a089013560808a0135610d4b565b90506102b18882846107fd565b5050505050505050565b6102c36107a3565b6102cd60006108c4565b565b600054610100900460ff16158080156102ef5750600054600160ff909116105b806103095750303b158015610309575060005460ff166001145b6103715760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610394576000805461ff0019166101001790555b61039c610916565b80156103e2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6103ed6107a3565b6040805160c081019091526000908061040960208a018a610b9a565b6001600160a01b0316803b806020016040519081016040528181526000908060200190933c81526020018860200160208101906104469190610b9a565b6001600160a01b0316803b806020016040519081016040528181526000908060200190933c815260200161048060608a0160408b01610b9a565b6001600160a01b0316803b806020016040519081016040528181526000908060200190933c81526020016104ba60808a0160608b01610b9a565b6001600160a01b0316803b806020016040519081016040528181526000908060200190933c81526020016104f460a08a0160808b01610b9a565b6001600160a01b0316803b806020016040519081016040528181526000908060200190933c815260200161052e60c08a0160a08b01610b9a565b6001600160a01b0316803b806020016040519081016040528181526000908060200190933c90526105626020880188610b9a565b6105726040890160208a01610b9a565b61058260608a0160408b01610b9a565b61059260808b0160608c01610b9a565b6105a260a08c0160808d01610b9a565b8a8a896040516024016105bd99989796959493929190610c02565b60408051601f19818403018152919052602080820180516001600160e01b0316632b5c363560e11b1790529091506000906105fa908a018a610b9a565b825160405163a66b327d60e01b81526004810191909152600060248201526001600160a01b03919091169063a66b327d90604401602060405180830381865afa15801561064b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066f9190610d68565b9050600061068560a08b013560808c0135610d4b565b61068f9083610d81565b905061069d8a838386610945565b60006106a98234610d94565b90506000866001600160a01b03168260405160006040518083038185875af1925050503d80600081146106f8576040519150601f19603f3d011682016040523d82523d6000602084013e6106fd565b606091505b505090508061071f5760405163b396d31d60e01b815260040160405180910390fd5b505050505050505050505050565b6107356107a3565b6001600160a01b03811661079a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610368565b6103e2816108c4565b6033546001600160a01b031633146102cd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610368565b61080a6020840184610b9a565b6001600160a01b031663549e84266108286040860160208701610b9a565b60008061083b6060890160408a01610b9a565b61084b60808a0160608b01610b9a565b89608001358a60a001358a8a6040518a63ffffffff1660e01b815260040161087b99989796959493929190610da7565b6020604051808303816000875af115801561089a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be9190610d68565b50505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661093d5760405162461bcd60e51b815260040161036890610e0a565b6102cd610a0c565b6109526020850185610b9a565b6001600160a01b031663679b6ded836109716040880160208901610b9a565b60008761098460608b0160408c01610b9a565b61099460808c0160608d01610b9a565b8b608001358c60a001358a6040518a63ffffffff1660e01b81526004016109c2989796959493929190610e55565b60206040518083038185885af11580156109e0573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a059190610d68565b5050505050565b600054610100900460ff16610a335760405162461bcd60e51b815260040161036890610e0a565b6102cd336108c4565b600060c08284031215610a4e57600080fd5b50919050565b600060a08284031215610a4e57600080fd5b80356001600160a01b0381168114610a7d57600080fd5b919050565b6000806000806000806102808789031215610a9c57600080fd5b610aa68888610a3c565b9550610ab58860c08901610a3c565b9450610ac5886101808901610a54565b9350610ad46102208801610a66565b9250610ae36102408801610a66565b9150610af26102608801610a66565b90509295509295509295565b6001600160a01b03169052565b60008060008060008060006102a0888a031215610b2757600080fd5b610b318989610a3c565b9650610b408960c08a01610a3c565b9550610b50896101808a01610a54565b9450610b5f6102208901610a66565b9350610b6e6102408901610a66565b9250610b7d6102608901610a66565b9150610b8c6102808901610a66565b905092959891949750929550565b600060208284031215610bac57600080fd5b610bb582610a66565b9392505050565b6000815180845260005b81811015610be257602081850181015186830182015201610bc6565b506000602082860101526020601f19601f83011685010191505092915050565b60006101208083528b5160c082850152610c206101e0850182610bbc565b91505060208c015161011f198085840301610140860152610c418383610bbc565b925060408e015191508085840301610160860152610c5f8383610bbc565b925060608e015191508085840301610180860152610c7d8383610bbc565b925060808e0151915080858403016101a0860152610c9b8383610bbc565b925060a08e0151915080858403016101c086015250610cba8282610bbc565b92505050610ccb602083018b610afe565b610cd8604083018a610afe565b610ce56060830189610afe565b610cf26080830188610afe565b610cff60a0830187610afe565b610d0c60c0830186610afe565b610d1960e0830185610afe565b610d27610100830184610afe565b9a9950505050505050505050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610d6257610d62610d35565b92915050565b600060208284031215610d7a57600080fd5b5051919050565b80820180821115610d6257610d62610d35565b81810381811115610d6257610d62610d35565b600061012060018060a01b03808d1684528b60208501528a6040850152808a1660608501528089166080850152508660a08401528560c08401528460e084015280610100840152610dfa81840185610bbc565b9c9b505050505050505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600061010060018060a01b03808c1684528a602085015289604085015280891660608501528088166080850152508560a08401528460c08401528060e0840152610ea181840185610bbc565b9b9a505050505050505050505056fea2646970667358221220083cfab3d60dbb5f783ac3556c4aea3fdb53bfe180fd1d7bb2c14c331f8546c564736f6c63430008110033'

export class L1TokenBridgeRetryableSender__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0])
    } else {
      super(...args)
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<L1TokenBridgeRetryableSender> {
    return super.deploy(
      overrides || {}
    ) as Promise<L1TokenBridgeRetryableSender>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): L1TokenBridgeRetryableSender {
    return super.attach(address) as L1TokenBridgeRetryableSender
  }
  connect(signer: Signer): L1TokenBridgeRetryableSender__factory {
    return super.connect(signer) as L1TokenBridgeRetryableSender__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): L1TokenBridgeRetryableSenderInterface {
    return new utils.Interface(_abi) as L1TokenBridgeRetryableSenderInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L1TokenBridgeRetryableSender {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as L1TokenBridgeRetryableSender
  }
}
