/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  CallOverrides,
} from 'ethers'
import { BytesLike } from '@ethersproject/bytes'
import { Listener, Provider } from '@ethersproject/providers'
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi'
import type { TypedEventFilter, TypedEvent, TypedListener } from './common'

interface OrbitSaltsInterface extends ethers.utils.Interface {
  functions: {
    'BEACON_PROXY_FACTORY()': FunctionFragment
    'L1_CUSTOM_GATEWAY()': FunctionFragment
    'L1_PROXY_ADMIN()': FunctionFragment
    'L1_ROUTER()': FunctionFragment
    'L1_STANDARD_GATEWAY()': FunctionFragment
    'L1_WETH_GATEWAY()': FunctionFragment
    'L2_CUSTOM_GATEWAY()': FunctionFragment
    'L2_CUSTOM_GATEWAY_LOGIC()': FunctionFragment
    'L2_EXECUTOR()': FunctionFragment
    'L2_EXECUTOR_LOGIC()': FunctionFragment
    'L2_PROXY_ADMIN()': FunctionFragment
    'L2_ROUTER()': FunctionFragment
    'L2_ROUTER_LOGIC()': FunctionFragment
    'L2_STANDARD_ERC20()': FunctionFragment
    'L2_STANDARD_GATEWAY()': FunctionFragment
    'L2_STANDARD_GATEWAY_LOGIC()': FunctionFragment
    'L2_WETH()': FunctionFragment
    'L2_WETH_GATEWAY()': FunctionFragment
    'L2_WETH_GATEWAY_LOGIC()': FunctionFragment
    'L2_WETH_LOGIC()': FunctionFragment
    'UPGRADEABLE_BEACON()': FunctionFragment
  }

  encodeFunctionData(
    functionFragment: 'BEACON_PROXY_FACTORY',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'L1_CUSTOM_GATEWAY',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'L1_PROXY_ADMIN',
    values?: undefined
  ): string
  encodeFunctionData(functionFragment: 'L1_ROUTER', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'L1_STANDARD_GATEWAY',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'L1_WETH_GATEWAY',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'L2_CUSTOM_GATEWAY',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'L2_CUSTOM_GATEWAY_LOGIC',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'L2_EXECUTOR',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'L2_EXECUTOR_LOGIC',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'L2_PROXY_ADMIN',
    values?: undefined
  ): string
  encodeFunctionData(functionFragment: 'L2_ROUTER', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'L2_ROUTER_LOGIC',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'L2_STANDARD_ERC20',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'L2_STANDARD_GATEWAY',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'L2_STANDARD_GATEWAY_LOGIC',
    values?: undefined
  ): string
  encodeFunctionData(functionFragment: 'L2_WETH', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'L2_WETH_GATEWAY',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'L2_WETH_GATEWAY_LOGIC',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'L2_WETH_LOGIC',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'UPGRADEABLE_BEACON',
    values?: undefined
  ): string

  decodeFunctionResult(
    functionFragment: 'BEACON_PROXY_FACTORY',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'L1_CUSTOM_GATEWAY',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'L1_PROXY_ADMIN',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'L1_ROUTER', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'L1_STANDARD_GATEWAY',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'L1_WETH_GATEWAY',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'L2_CUSTOM_GATEWAY',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'L2_CUSTOM_GATEWAY_LOGIC',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'L2_EXECUTOR', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'L2_EXECUTOR_LOGIC',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'L2_PROXY_ADMIN',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'L2_ROUTER', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'L2_ROUTER_LOGIC',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'L2_STANDARD_ERC20',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'L2_STANDARD_GATEWAY',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'L2_STANDARD_GATEWAY_LOGIC',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'L2_WETH', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'L2_WETH_GATEWAY',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'L2_WETH_GATEWAY_LOGIC',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'L2_WETH_LOGIC',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'UPGRADEABLE_BEACON',
    data: BytesLike
  ): Result

  events: {}
}

export class OrbitSalts extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this

  listeners(eventName?: string): Array<Listener>
  off(eventName: string, listener: Listener): this
  on(eventName: string, listener: Listener): this
  once(eventName: string, listener: Listener): this
  removeListener(eventName: string, listener: Listener): this
  removeAllListeners(eventName?: string): this

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>

  interface: OrbitSaltsInterface

  functions: {
    BEACON_PROXY_FACTORY(overrides?: CallOverrides): Promise<[string]>

    L1_CUSTOM_GATEWAY(overrides?: CallOverrides): Promise<[string]>

    L1_PROXY_ADMIN(overrides?: CallOverrides): Promise<[string]>

    L1_ROUTER(overrides?: CallOverrides): Promise<[string]>

    L1_STANDARD_GATEWAY(overrides?: CallOverrides): Promise<[string]>

    L1_WETH_GATEWAY(overrides?: CallOverrides): Promise<[string]>

    L2_CUSTOM_GATEWAY(overrides?: CallOverrides): Promise<[string]>

    L2_CUSTOM_GATEWAY_LOGIC(overrides?: CallOverrides): Promise<[string]>

    L2_EXECUTOR(overrides?: CallOverrides): Promise<[string]>

    L2_EXECUTOR_LOGIC(overrides?: CallOverrides): Promise<[string]>

    L2_PROXY_ADMIN(overrides?: CallOverrides): Promise<[string]>

    L2_ROUTER(overrides?: CallOverrides): Promise<[string]>

    L2_ROUTER_LOGIC(overrides?: CallOverrides): Promise<[string]>

    L2_STANDARD_ERC20(overrides?: CallOverrides): Promise<[string]>

    L2_STANDARD_GATEWAY(overrides?: CallOverrides): Promise<[string]>

    L2_STANDARD_GATEWAY_LOGIC(overrides?: CallOverrides): Promise<[string]>

    L2_WETH(overrides?: CallOverrides): Promise<[string]>

    L2_WETH_GATEWAY(overrides?: CallOverrides): Promise<[string]>

    L2_WETH_GATEWAY_LOGIC(overrides?: CallOverrides): Promise<[string]>

    L2_WETH_LOGIC(overrides?: CallOverrides): Promise<[string]>

    UPGRADEABLE_BEACON(overrides?: CallOverrides): Promise<[string]>
  }

  BEACON_PROXY_FACTORY(overrides?: CallOverrides): Promise<string>

  L1_CUSTOM_GATEWAY(overrides?: CallOverrides): Promise<string>

  L1_PROXY_ADMIN(overrides?: CallOverrides): Promise<string>

  L1_ROUTER(overrides?: CallOverrides): Promise<string>

  L1_STANDARD_GATEWAY(overrides?: CallOverrides): Promise<string>

  L1_WETH_GATEWAY(overrides?: CallOverrides): Promise<string>

  L2_CUSTOM_GATEWAY(overrides?: CallOverrides): Promise<string>

  L2_CUSTOM_GATEWAY_LOGIC(overrides?: CallOverrides): Promise<string>

  L2_EXECUTOR(overrides?: CallOverrides): Promise<string>

  L2_EXECUTOR_LOGIC(overrides?: CallOverrides): Promise<string>

  L2_PROXY_ADMIN(overrides?: CallOverrides): Promise<string>

  L2_ROUTER(overrides?: CallOverrides): Promise<string>

  L2_ROUTER_LOGIC(overrides?: CallOverrides): Promise<string>

  L2_STANDARD_ERC20(overrides?: CallOverrides): Promise<string>

  L2_STANDARD_GATEWAY(overrides?: CallOverrides): Promise<string>

  L2_STANDARD_GATEWAY_LOGIC(overrides?: CallOverrides): Promise<string>

  L2_WETH(overrides?: CallOverrides): Promise<string>

  L2_WETH_GATEWAY(overrides?: CallOverrides): Promise<string>

  L2_WETH_GATEWAY_LOGIC(overrides?: CallOverrides): Promise<string>

  L2_WETH_LOGIC(overrides?: CallOverrides): Promise<string>

  UPGRADEABLE_BEACON(overrides?: CallOverrides): Promise<string>

  callStatic: {
    BEACON_PROXY_FACTORY(overrides?: CallOverrides): Promise<string>

    L1_CUSTOM_GATEWAY(overrides?: CallOverrides): Promise<string>

    L1_PROXY_ADMIN(overrides?: CallOverrides): Promise<string>

    L1_ROUTER(overrides?: CallOverrides): Promise<string>

    L1_STANDARD_GATEWAY(overrides?: CallOverrides): Promise<string>

    L1_WETH_GATEWAY(overrides?: CallOverrides): Promise<string>

    L2_CUSTOM_GATEWAY(overrides?: CallOverrides): Promise<string>

    L2_CUSTOM_GATEWAY_LOGIC(overrides?: CallOverrides): Promise<string>

    L2_EXECUTOR(overrides?: CallOverrides): Promise<string>

    L2_EXECUTOR_LOGIC(overrides?: CallOverrides): Promise<string>

    L2_PROXY_ADMIN(overrides?: CallOverrides): Promise<string>

    L2_ROUTER(overrides?: CallOverrides): Promise<string>

    L2_ROUTER_LOGIC(overrides?: CallOverrides): Promise<string>

    L2_STANDARD_ERC20(overrides?: CallOverrides): Promise<string>

    L2_STANDARD_GATEWAY(overrides?: CallOverrides): Promise<string>

    L2_STANDARD_GATEWAY_LOGIC(overrides?: CallOverrides): Promise<string>

    L2_WETH(overrides?: CallOverrides): Promise<string>

    L2_WETH_GATEWAY(overrides?: CallOverrides): Promise<string>

    L2_WETH_GATEWAY_LOGIC(overrides?: CallOverrides): Promise<string>

    L2_WETH_LOGIC(overrides?: CallOverrides): Promise<string>

    UPGRADEABLE_BEACON(overrides?: CallOverrides): Promise<string>
  }

  filters: {}

  estimateGas: {
    BEACON_PROXY_FACTORY(overrides?: CallOverrides): Promise<BigNumber>

    L1_CUSTOM_GATEWAY(overrides?: CallOverrides): Promise<BigNumber>

    L1_PROXY_ADMIN(overrides?: CallOverrides): Promise<BigNumber>

    L1_ROUTER(overrides?: CallOverrides): Promise<BigNumber>

    L1_STANDARD_GATEWAY(overrides?: CallOverrides): Promise<BigNumber>

    L1_WETH_GATEWAY(overrides?: CallOverrides): Promise<BigNumber>

    L2_CUSTOM_GATEWAY(overrides?: CallOverrides): Promise<BigNumber>

    L2_CUSTOM_GATEWAY_LOGIC(overrides?: CallOverrides): Promise<BigNumber>

    L2_EXECUTOR(overrides?: CallOverrides): Promise<BigNumber>

    L2_EXECUTOR_LOGIC(overrides?: CallOverrides): Promise<BigNumber>

    L2_PROXY_ADMIN(overrides?: CallOverrides): Promise<BigNumber>

    L2_ROUTER(overrides?: CallOverrides): Promise<BigNumber>

    L2_ROUTER_LOGIC(overrides?: CallOverrides): Promise<BigNumber>

    L2_STANDARD_ERC20(overrides?: CallOverrides): Promise<BigNumber>

    L2_STANDARD_GATEWAY(overrides?: CallOverrides): Promise<BigNumber>

    L2_STANDARD_GATEWAY_LOGIC(overrides?: CallOverrides): Promise<BigNumber>

    L2_WETH(overrides?: CallOverrides): Promise<BigNumber>

    L2_WETH_GATEWAY(overrides?: CallOverrides): Promise<BigNumber>

    L2_WETH_GATEWAY_LOGIC(overrides?: CallOverrides): Promise<BigNumber>

    L2_WETH_LOGIC(overrides?: CallOverrides): Promise<BigNumber>

    UPGRADEABLE_BEACON(overrides?: CallOverrides): Promise<BigNumber>
  }

  populateTransaction: {
    BEACON_PROXY_FACTORY(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    L1_CUSTOM_GATEWAY(overrides?: CallOverrides): Promise<PopulatedTransaction>

    L1_PROXY_ADMIN(overrides?: CallOverrides): Promise<PopulatedTransaction>

    L1_ROUTER(overrides?: CallOverrides): Promise<PopulatedTransaction>

    L1_STANDARD_GATEWAY(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    L1_WETH_GATEWAY(overrides?: CallOverrides): Promise<PopulatedTransaction>

    L2_CUSTOM_GATEWAY(overrides?: CallOverrides): Promise<PopulatedTransaction>

    L2_CUSTOM_GATEWAY_LOGIC(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    L2_EXECUTOR(overrides?: CallOverrides): Promise<PopulatedTransaction>

    L2_EXECUTOR_LOGIC(overrides?: CallOverrides): Promise<PopulatedTransaction>

    L2_PROXY_ADMIN(overrides?: CallOverrides): Promise<PopulatedTransaction>

    L2_ROUTER(overrides?: CallOverrides): Promise<PopulatedTransaction>

    L2_ROUTER_LOGIC(overrides?: CallOverrides): Promise<PopulatedTransaction>

    L2_STANDARD_ERC20(overrides?: CallOverrides): Promise<PopulatedTransaction>

    L2_STANDARD_GATEWAY(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    L2_STANDARD_GATEWAY_LOGIC(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    L2_WETH(overrides?: CallOverrides): Promise<PopulatedTransaction>

    L2_WETH_GATEWAY(overrides?: CallOverrides): Promise<PopulatedTransaction>

    L2_WETH_GATEWAY_LOGIC(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    L2_WETH_LOGIC(overrides?: CallOverrides): Promise<PopulatedTransaction>

    UPGRADEABLE_BEACON(overrides?: CallOverrides): Promise<PopulatedTransaction>
  }
}
